#!/usr/bin/env python3 -W default::::
# (the above changed at #history-A.1)

"""experiement - kick the server as it needs to be running for tests.

we do this here so that we don't have to muck with the real `os.environ`
to get the server running to run tests. think of this as a fixture that
has hard-coded, dummy versions of the environment variables we need..
"""

from upload_bot._magnetics import webserver_via_pid_file_path
from upload_bot._models import filesystem
from upload_bot_test.common_initial_state import (
        BOT_USER_OATH_ACCESS_TOKEN_EXAMPLE_,
        VERIFICATION_TOKEN_EXAMPLE_,
        writable_tmpdir)
import psutil
import os
import sys


path = os.path


def _main():

    _listener = _build_listener()

    _filesystem = filesystem.real_filesystem()

    _pid_path = path.join(writable_tmpdir(), 'test-server.pid')

    webserver_via_pid_file_path(
        start_server=start_server,
        pid_file_path=_pid_path,
        psutil=psutil,
        filesystem=_filesystem,
        listener=_listener)


def start_server(pid_func, listener):

    info = _infoer_via_listener(listener)

    pid_func(os.getpid())

    info('about to try and run server')

    import upload_bot.run as run

    _environ = _build_environment()

    run.run_forever_newschool_(
            _environ,
            port=5001,
            use_reloader=False,
            )


def _build_environment():
    o = {}
    o['BOT_USER_OATH_ACCESS_TOKEN'] = BOT_USER_OATH_ACCESS_TOKEN_EXAMPLE_
    o['VERIFICATION_TOKEN'] = VERIFICATION_TOKEN_EXAMPLE_
    return o


def _infoer_via_listener(listener):
    def f(s):
        def msg(recv_msg):
            recv_msg(s)
        listener('info', 'expression', msg)
    return f


def _build_listener():

    def listener(*a):
        def f(s):
            info_IO.write('{}\n'.format(s))
        a[-1](f)
    info_IO = sys.stderr
    return listener


_main()

# #history-A.1: got rid of too strict warning setting
# #born.
