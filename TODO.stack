basic game (as a separate module)
structure viz (ASCII)
something about config files parsing like commmand line arguments
game model
(explode "basic game" into milestones for a new phase)
(below is the end of the phase)
sessions
slack
IRC
telnet
scheduler
look at JSON parsing
look at pack/unpack
start kicker
is inotify a thing
basic IPC between processes in python
  many lessons
  commit the markdown that is a snapshot of the TOC
  that one-off
cover: parameters integrated into a hello world
  wish: consts not strings (or enum type)
  cover: the behavior when a parameter isn't found
  refactor: use `yield` in description functions
  cover: modeling parameters
  cover: the magnet on the failure path
  cover: the magnet on the success path
  cover: test thing: tees, debugging output
  cover: the remaining memoizers in helper.py
  look into re efficiency
  look up doc string conventions again to figure out if that extra line is right
sub-project: proof-of-concept search tool "JSON grep"
  [reserved for final cleanup & overflow]
  integrate real search
  implement & cover real backend for search
  integrate dummy story - ajax-pagination YIKES
  [reserved for unforseen milestones]
  integrate dummy story - no pagination, hard-coded limit
  integrate (& redesign as necessary) full integration for indexing
  implement & cover real backend for "indexing"
  dummy ajax interface for "indexing"
  integrate with front - fudge time maybe
  real backend for indexing
  mocked frontend for indexing
