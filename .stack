creative self actualization
maybe a CLI (explode me)
Cover DELETE that would leave entites file empty
cover yes schema file but no ent entites dir
a lot of the names in state machine module are still EXPERIMENTAL
"business schema" that has a primitive types section
base actions perhaps not needed for that one actions
codename WASD
learn enough SDK to make WASD
have full on eno
[#874.9] files marked as "LEGACY" should be seated or deleted
there are todo's
exit criteria: codepen-style side-by-side editing & viewing
livereload integrated somehow
outside of the context of the server, message broker and SSG adapter
parsing config somehow (decide on config representation)
get plain old pelican working with one of the shortlist themes, rewriting 1 file
the server's API exposes a thing "notify of file changed"
one layer above dictionary-based server: API-based
one layer above string-based server: dictionary-based
ncurses send and receives multiple request/responses before clean disconnect/exit
isomorph niCLI and ncurses (exit with terminal buffer, enter with -i and args, round-trip OK) (consider using [ma])
maybe now would be a good time to prune unused methods with coverage
the daunting poly-option
reorderable list (isomorph with glob argument)
constraints for everything. pass/fail
only an editable list, no constraints. add, reorder, delete. contrived interface with emacs field.
stylesheet
fix the display issues with the wide unicode gif by using a double-wide space
get the form fields back from your current visual test
poly-option input (use injection thing)
conditional buttons thing
