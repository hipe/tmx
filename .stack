the big question - slicer (G)->(B)
insane experment with [sa] - convert every `should eql` to etc and see diff (C)
unify table under [ze] and then re-apply this to [tmx] counts (covered, add totals row and fix layout)
fix [#ca-xx] => [#co-xx], â€¢ in md's, `_call`=>`call`, memoize vs lazy) (B)
try to simplify [ac]/[ze] procure bound call
[tm] change actors and sessions to magnetics
[tm] no more Selective_Builder_Receiver_Sender_Methods
use [sa] to convert etc to Stream_
-1 script to calculate costs [#tmx-011] then [#tmx-010]
-2 the cost-driven divvy algorithm [#tmx-012]
-3 unify other tmx node-centric services [#tmx-015]
[#tmx-018.3] primaries of the `select` operation should show up in the `test-all` screen
[#tmx-019] get fuzzy out of multimode scanner
(eventpoint event can go away to somewhere)
[ze] Expresser needs slight cleanup, should be simple model
(-4 cleanup the items between this one and -3)
-5 [br] is renovated when it is only datastore adapteres and the example app
-6 [cs] have fun figuring out what to do with isomorpic methods client
-7 also: decide if entity library is deprecated (#open [#fi-034.1])
when [tm] CLI: #open [#tm-059] invites
[#ze-008.2] glob values
API's: [st],[co]
API: [gi] (during this, modernize "directory as collection" (or not))
API's: [f2],[bs],[tr],[sl]
finish what you started with expag (somewhere)
(there are many "hi. ##{}todo"-type lines in [fi])
explain MTk and associate the explanation with its nodes
API's: [tm],[gv],[cu],[cm]
HO tan_man/test/62-cli_spec.rb
`make_action_class` and related: liquidate this. (push back as necessary)
(many $stderr in [tm])
(many `if false` in [tm])
#open [#tm-097] abstract when an expected primitive is not found in config
(model: graph)
(related: driftwood in [#tm-026])
TD tan_man/test/54-operations/91-graph/44-sync_spec.rb
(silo: hear)
consider trying to quash `make_action_making_actions_module`
TD tan_man/test/54-operations/95-hear/86-meaning/64-apply_spec.rb
TD tan_man/test/54-operations/95-hear/86-meaning/44-create_spec.rb
TD tan_man/test/54-operations/95-hear/68-association_spec.rb
TD tan_man/test/54-operations/95-hear/10-intro_spec.rb
(model: meaning
resolve_insertion_ivars when_exact_match_fly_resolve_insertion_ivars via_exact_match_resolve_insertion_ivars before_least_greater_name_resolve_insertion_ivars when_no_neighbors_resolve_insertion_ivars rewrite_string  resolve_new_line sanitize_e0  when_name_collision  when_no_change  when_will_not_clobber index! when_no_stmt_list find_nodes node_verb_when_touch  node_verb_when_delete find_neighbor_associations  when_same  when_same_when_touch  send_found_existing_event  work work_when_touch  resolve_prototype  via_prototype_i_resolve_prototype when_no_protos via_named_protos_resolve_prototype  when_no_proto  resolve_default_prototype  resolve_hardcoded_prototype  via_prototype_make_association  resolve_edge_statement  add_attrs_to_edge_stmt  in_edge_stmt_produce_attr_list to_edge_stmt_add_attr_list  via_edge_stmt_make_association work_when_delete  when_not_found 
TD tan_man/test/54-operations/86-meaning/64-graph_spec.rb
TD tan_man/test/54-operations/86-meaning/44-add_spec.rb
TD tan_man/test/54-operations/86-meaning/14-list_spec.rb
(model: comment)
TD tan_man/test/54-operations/77-comment/14-stream_spec.rb
(model: association)
TD tan_man/test/54-operations/68-association/44-create_spec.rb
TD tan_man/test/54-operations/68-association/34-delete_spec.rb
(model: node)
refactor the add to use the doohah
get rid of _accept_association_ per se - make it only set due to the existence of :@_associations_ - write about it in [#xxx]
