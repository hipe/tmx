the big question - slicer (G)->(B)
insane experment with [sa] - convert every `should eql` to etc and see diff (C)
unify table under [ze] and then re-apply this to [tmx] counts (covered, add totals row and fix layout)
fix [#ca-xx] => [#co-xx], â€¢ in md's, `_call`=>`call`, memoize vs lazy) (B)
try to simplify [ac]/[ze] procure bound call
use [sa] to convert etc to Stream_
-1 script to calculate costs [#tmx-011] then [#tmx-010]
-2 the cost-driven divvy algorithm [#tmx-012]
-3 unify other tmx node-centric services [#tmx-015]
[#tmx-018.3] primaries of the `select` operation should show up in the `test-all` screen
[#tmx-019] get fuzzy out of dig scanner
(eventpoint event can go away to somewhere)
[ze] Expresser needs slight cleanup, should be simple model
(-4 cleanup the items between this one and -3)
-5 [br] is renovated when it is only datastore adapteres and the example app
HO cull/test/64-cli/10-intro_spec.rb
HO git/test/[ many CLI ]
HO tan_man/test/62-cli_spec.rb
when [tm] CLI: #open [#tm-059] invites
when all use of [br] API is weened off, cover new proc-based action adapter #open [#br-036]
consider trying to quash `make_action_making_actions_module`
consider trying to quash `make_action_class`
-6 [cs] have fun figuring out what to do with isomorpic methods client
-7 also: decide if entity library is deprecated (#open [#fi-034.1])
[#ze-008.2] glob values
finish what you started with expag (somewhere)
(there are many "hi. ##{}todo"-type lines in [fi])
explain MTk and associate the explanation with its nodes
([br]: N actions..)
([co]: 2 actions, API only)
([tr]: 2 actions but maybe no coverage, API only)
([bs]: 3 actions, API only)
([gv]: 2 actions, API only)
([st]: 3 actions, API only)
([f2]: 3 actions, API only)
([sl]: 4 actions, API only)
([cm]: 4 actions, API only)
[#ze-051] is same as valid value store - do anything about this now?
not used: common/test/expect-emission-meta.rb
unify emission class with the others..
fold-in expect emission (oldschool)
fold-in "fail early"
make names modern ("emission.rb")
(somewhere: dig scanner away, for 2nd wave and [br] injection)
cull/test/54-operations/62-mutator/50-unmarshal_spec.rb
cull/test/54-operations/62-mutator/25-actions_spec.rb
cull/test/54-operations/37-upstream/50-map/50-markdown-vertical_spec.rb
cull/test/54-operations/37-upstream/50-map/25-markdown-horizontal_spec.rb
cull/test/54-operations/12-survey/91-aggregator_spec.rb
cull/test/54-operations/12-survey/74-reduce_spec.rb
smalls in [#cu-007]
cull/test/54-operations/12-survey/58-mutator_spec.rb
get to this to_special_boxxy_item_name_stream__  (function-via-string.rb:99)
you need this: added_function_call
so you need this: RecomposeSection_via_FunctionCalls_and_Section___
read all of [#005] about this
the key is getting to the persist call in the survey object..
you can get rid of "FunctionBasedAssociations_" move it to assoc/curried-functions
[ac] pluralton persistence dedicated tests!
finish one new magent
finish other new magnet
fix diff thing
clean up that crazy hack in an isolated commit - fields/lib/skylab/fields/normalization.rb
all known near-term practial applications of this (-1) (Z) (Z)->(W,Y,J)
.to_symbolish_reference_scanner not .to_loadable_reference_stream (-2) (Y) (Y)
convert every '.should' to `expect( ).to` 07-19 03:47:08 (-3) (W) (W)->(J)
many TODOs and COVER_ME and _SN and _DS (-4) (J) (J)->(S)
it's a mess to create a structured node instance just to use the collection thing (-5) (S) (S)->(R)
for each sidesystem (in ascending order of complexity) get the damn patch (R) (-6) (R)->(E9)
tmx (-7) (E9)->(E8)
slicer (-8) (E8)->(E7)
myterm (-9) (E7)->(E6)
doc_test (-10) (E6)->(E5)
git_viz (-11) (E5)->(E4)
treemap (-12) (E4)->(E3)
code_metrics (-13) (E3)->(E2)
search_and_replace (-14) (E2)->(E1)
beauty_salon (-15) (E1)->(D5)
cull (-16) (D5)->(D4)
tan_man (-17) (D4)->(D3)
snag (-18) (D3)->(D2)
task_examples (-19) (D2)->(D1)
task (-20) (D1)->(C6)
sub_tree (-21) (C6)->(C5)
permute (-22) (C5)->(C4)
css_convert (-23) (C4)->(C3)
bnf2treetop (-24) (C3)->(C2)
yacc2treetop (-25) (C2)->(C1)
flex2treetop (-26) (C1)->(B8)
git (-27) (B8)->(B7)
brazen (-28) (B7)->(B6)
plugin (-29) (B6)->(B5)
zerk (-30) (B5)->(B4)
arc (-31) (B4)->(B3)
fields (-32) (B3)->(B2)
tabular (-33) (B2)->(B1)
parse (-34) (B1)->(A23)
system (-35) (A23)->(A22)
test_support (-36) (A22)->(A21)
human (-37) (A21)->(A12)
basic (-38) (A12)->(A11)
it would be nice to simplify the remainder of the monolith. maybe get that one pattern out.
maybe at the source of where you parse the delimiter, go with an injection model and get rid of that other file..
lots of byebug_chillin
maybe rename that fellow
