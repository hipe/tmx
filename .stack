the big question - slicer (G)->(B)
insane experment with [sa] - convert every `should eql` to etc and see diff (C)
unify table under [ze] and then re-apply this to [tmx] counts (covered, add totals row and fix layout)
fix [#ca-xx] => [#co-xx], â€¢ in md's, `_call`=>`call`, memoize vs lazy) (B)
try to simplify [ac]/[ze] procure bound call
[tm] change actors and sessions to magnetics
[tm] no more Selective_Builder_Receiver_Sender_Methods
use [sa] to convert etc to Stream_
-1 script to calculate costs [#tmx-011] then [#tmx-010]
-2 the cost-driven divvy algorithm [#tmx-012]
-3 unify other tmx node-centric services [#tmx-015]
-3.2 omni help screen system [#tmx-018]
-3.3 omni fuzzy resolution [#tmx-019]
-3.4 omni "did you mean.." [#tmx-020]
make tuple pager ([ze]) fit in with statistics
git rebase and squash around the other guys appropriately
join #open [#tab-003], is the acceptance of the below two.
make report showing the relative weights of the changesets
CLI-invoked general table renderer
-1 integrate with modality
-2 integrate this pipeline functionally
-3 implement each one
-4 decide how to break each element up into performers
-5 describe algorithm in a doc
