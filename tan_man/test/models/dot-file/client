#!/usr/bin/env ruby -w

# (..)

module Skylab::TanMan::TestSupport

  class Models::Dot_File::Client

    def initialize invo

      @listener = -> * sym_a, & ev_p do

        ev = ev_p[]

        if :using_parser_files != ev.terminal_channel_i
          raise ev.to_exception
        end
      end

      @__invocation = invo
    end

    def parse_file input_file_path
      _graph_sexp_via :input_path, input_file_path
    end

    def parse_string input_string
      _graph_sexp_via :input_string, input_string
    end

    def _graph_sexp_via sym, x

      _asc = Home_::DocumentMagnetics_::CommonAssociations.common_IO_parameters.dereference sym
      _qkn = Common_::Qualified_Knownness[ x, _asc ]
      _ref = Home_::DocumentMagnetics_::
        ByteStreamReference_via_QualifiedKnownness_and_ThroughputDirection.call(
          _qkn, :input )

      yikes = nil
      Home_::Models_::DotFile::DigraphSession_via_THESE.call_by do |o|

        o.session_by do |dc|
          yikes = dc
          true
        end

        o.be_read_only_not_read_write_
        o.byte_stream_reference = _ref
        o.microservice_invocation = @__invocation
        o.listener = @listener
      end

      yikes.graph_sexp
    end
  end
end

if __FILE__ == $PROGRAM_NAME
  ::Skylab::TanMan::TestSupport::Models::DotFile::Client.new( ARGV ).execute
end
