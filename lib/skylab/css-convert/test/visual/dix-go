#!/usr/bin/env ruby -w

require_relative '../../core'

module Skylab::CssConvert
  module VizTest
  end
  module VizTest::InstanceMethods
    def build_request_runtime
      CssConvert::CLI.new.request_runtime
    end
    def emit _, msg
      $stderr.puts msg
    end
    def error msg
      emit(:error, msg)
      false
    end
    attr_reader :parser
    def request_runtime
      @request_runtime ||= build_request_runtime
    end
    def resolve_input argv=ARGV, stdin=$stdin
      if stdin.tty?
        if 1 == argv.length
          parser.build_file_input_adapter argv.first
        else
          error("no. expecting <filename> or stdin")
        end
      elsif argv.empty?
        parser.build_stream_input_adapter stdin
      else
        error("no. can't have argv and stdin.")
      end
    end
  end

  class VizTest::Dix
    include VizTest::InstanceMethods
    def invoke
      @parser = CssConvert::DirectivesParser.new(request_runtime)
      input = resolve_input or return
      # puts "input: #{input.inspect}"
      result = parser.parse(input)
      # puts "result was: "+result.inspect
      puts "(num terminal failures: #{parser.parser.terminal_failures.length})"
      if result
        require 'pp'
        puts "result tree:"
        ::PP.pp result
      else
        puts "got no result.."
        puts parser.failure_reason
      end
    end
  end
end

if __FILE__ == $PROGRAM_NAME
  ::Skylab::CssConvert::VizTest::Dix.new.invoke
end
