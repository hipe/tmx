#!/usr/bin/env zsh

typeset me=$0 ; typeset -a rest ; rest=($*)

typeset __=${me:h:h:h:h:h:h}
typeset high_up_lib_dir=$__/zsh-lib
typeset high_up_script_dir=$__/script

source $high_up_lib_dir/init-component-node.zsh || return $?

-require-partlib () {
  source $particular_vcs_dir/zsh-lib/partlib.zsh
  -require-partlib () {}
}

troika-lookup-system-commands () {
  -prepare-troika-once || return $?
  typeset triad_indent="  "
  triad-lookup-system-commands\
    --system-commands-manifest $system_commands_manifest_path $*
}

-prepare-troika-once () {
  required-parameter high_up_lib_dir || return $?
  required-parameter high_up_script_dir || return $?
  -prepare-troika-once () {}
  source $high_up_lib_dir/triad.zsh
  set-triad-manifest-API-script $high_up_script_dir/manifest
}

typeset asset_stem=${component_node_local_top_dir##*/for-}
typeset particular_vcs_dir=${component_node_local_top_dir%/*/*}
typeset system_commands_manifest_path\
=$particular_vcs_dir/fixtures/system-commands.manifest
typeset vcs=${particular_vcs_dir##*/}

rest[$(($#rest + 1))]=tmp.$vcs.$asset_stem  # 'asset_output_dir'
rest[$(($#rest + 1))]="${rest[1]}"  # 'adverb'
# [#028] #storypoint-1: we hiccup a double of the adverb on to the array

component-node-splay
