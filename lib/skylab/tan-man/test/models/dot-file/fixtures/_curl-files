#!/bin/bash

# This is here (1) for reference and (2) as "proof" that some of the fixtures
#   came from real-world examples from the graph-viz site.
#
# It is over-engineered as an exercise.


NumColumns=2
NextIndex=0
declare -a Examples

example () {
  local output_name="$1" ; local input_url="$2" ; local idx=$NextIndex
  Examples[$idx]=$output_name ; Examples[$idx + 1]=$input_url
  NextIndex=`expr $idx + $NumColumns`
}

example '500-datastruct.dot' 'http://www.graphviz.org/Gallery/directed/datastruct.gv.txt'
example '699-psg.dot'        'http://www.graphviz.org/Gallery/directed/psg.gv.txt'

run () {
  local idx=0 ; local last=`expr ${#Examples[@]} - 1`
  until [ "$idx" -gt "$last" ] ; do
    local output_name=${Examples[idx]} ; local input_url=${Examples[idx + 1]}
    local cmd="curl -v -o $output_name $input_url"
    if [ -e "$output_name" ] ; then
      echo "exists, skipping: $output_name"
    else
      echo "$cmd"
      eval "$cmd"
    fi
    let "idx += $NumColumns"
  done
}
num=`expr ${#Examples[@]} / $NumColumns`
echo "curling $num examples.."

run

echo ".. $0 done."
