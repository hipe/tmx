# generated by bnf2treetop.  edits may be lost.
module Skylab::TanMan::Models::DotFile
  grammar DotLanguage
    include HandMadeSupplement
    rule graph
      s? ('strict' s)? ('graph' / 'digraph') (s id)? s? '{' s? stmt_list s? '}' s? <SyntaxNodes::Graph>
    end
    rule stmt_list
      # it's more complicated than below (generated), b/c see stmt_separator
      # (stmt ';'? stmt_list?)?
      (stmt tail:(stmt_separator stmt_list)? stmt_separator?)?
    end
    rule stmt_separator
      s? ';' s? / s
      { def tree ; text_value end }
    end
    rule stmt
      #   the below order (as generated) won't work for us
      # node_stmt / edge_stmt / attr_stmt / id '=' id / subgraph
      attr_stmt / edge_stmt / node_stmt / id '=' id / subgraph
    end
    rule attr_stmt
      ('graph' / 'node' / 'edge') attr_list
    end
    rule attr_list
      '[' a_list? ']' attr_list?
    end
    rule a_list
      id ('=' id)? ','? a_list?
    end
    rule edge_stmt
      (node_id / subgraph) edge_rhs attr_list?
    end
    rule edge_rhs
      edgeop (node_id / subgraph) edge_rhs?
    end
    rule node_stmt
      node_id attr_list?
    end
    rule node_id
      id port?
    end
    rule port
      ':' id (':' compass_pt)? / ':' compass_pt
    end
    rule subgraph
      ('subgraph' id?)? '{' stmt_list '}'
    end
    rule compass_pt
      ('n' / 'ne' / 'e' / 'se' / 's' / 'sw' / 'w' / 'nw' / 'c' / _)
    end
  end
end
