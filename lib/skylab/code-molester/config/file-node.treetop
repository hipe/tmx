module Skylab::CodeMolester::Config
  grammar FileNode
    rule file
      line more_lines:( "\n" line)*
      <ItemBranchy>
      {
        def lines
          [line, * more_lines.elements.map { |e| e.line } ]
        end
        def item_enumerator
          Enumerator.new do |y|
            y << line
            more_lines.elements.each { |e| y << e.line }
          end
        end
      }
    end
    rule line
      assignment_line / section_line / whitespace_line
    end
    rule comment
      '#' [ \t]* body:[^\n]*
    end
    rule assignment_line
      [ \t]*
      assignment_name_node:[_a-zA-Z0-9]+
      [ \t]* '=' [ \t]*
      assignment_value:( [ \t]* ( ![ \t#\n] . )+ )*
      [ \t]*
      comment:comment?
      {
        def assignment_name ; assignment_name_node.text_value               end
        alias_method :item_name, :assignment_name
        def item_value      ; assignment_value.text_value                   end # etc
        def nt_name         ; :assignment_line                              end
      }
    end
    rule whitespace_line
      [ \t]* comment?
      {
        def nt_name ; :whitespace_line end
      }
    end
    rule section_line
      [ \t]* '[' [ \t]*
      name_node:[-_a-z0-9a\.]+
      [ \t]* ']' [ \t]* comment:comment?
      {
        def nt_name         ; :section_line                                 end
        def section_name    ; name_node.text_value                          end
      }
    end
  end
end

