#!/usr/bin/env ruby -w

require 'skylab/tmx'
require 'skylab/slicer'

serr = $stderr

upstream = Skylab::Slicer::Script_Support_.resolve_upstream $stdin, $stderr, ARGV
upstream or exit( 5 )

st =  Skylab::TMX.to_reflective_sidesystem_stream
h = {}

begin
  ni = st.gets
  ni or break
  h[ ni.entry_string ] = ni
  redo
end while nil

top_of_universe = ::Dir.pwd


if 'yes' == ::ENV['TMX_OMG']
  serr.puts "(LET'S DO IT LIVE)"
  _IS_LIVE = true
else
  serr.puts "(set envrionment variable 'TMX_OMG' to 'yes' to go live.)"
  _IS_LIVE = false
end

count = 0

begin

  item = upstream.gets
  item or break
  count += 1
  item.chomp!

  ni = h[ item ]
  if ! ni
    serr.puts "NOT FOUND: #{ item }"
    redo
  end

  stat = ::File.lstat ni.gem_path

  if stat.symlink?
    serr.puts "IS ALREADY SYMLINK! skipping - #{ ni.gem_path }"
    redo
  end

  cmd = [ "rm", "-rf", ni.gem_path ]

  serr.puts "OH MY GOD: #{ cmd * ' ' }"

  if _IS_LIVE
    _ok = ::Kernel.system( * cmd )
    _ok or break
  end

  exists = ::File.join top_of_universe, item
  want = ni.gem_path

  cmd = "ln -s #{ exists } #{ want }"
  serr.puts cmd

  if _IS_LIVE
    _d = ::File.symlink exists, want
    _d.zero? or break
  end

  redo
end while nil

serr.puts "(done with #{ count } items.)"
