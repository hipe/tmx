#!/usr/bin/env ruby -w

require 'skylab/slicer'

serr = $stderr

invo = Skylab::Slicer::ScriptSupport_::Invocation.define do |o|

  # this is :[#161.4] - the symlinks script

  o.describe_by do |y|
    y << "YIKES! symlink the gems of the indicated sidesystems"
    y << "so they are using the live code under development. YIKES!"
    y << nil
    y << "dry run is default. you have to set a special environment variable"
    y << "(recommendation: do it on the command line: `ENV_VAR=x the/command`)"
    y << "in order to turn dry-run off."
  end

  o.stdin = $stdin
  o.stderr = serr
  o.ARGV = ARGV
end

upstream = invo.flush_upstream_

upstream or exit( 5 )

if 'yes' == ::ENV['TMX_OMG']
  serr.puts "(LET'S DO IT LIVE)"
  _IS_LIVE = true
else
  serr.puts "(set envrionment variable 'TMX_OMG' to 'yes' to go live.)"
  _IS_LIVE = false
end


_ = invo.script_path_ :_essentials_script_
load _
h = Skylab_Slicer_OneOff_0::Build_gem_index[]


count = 0

begin

  item = upstream.gets
  item || break
  count += 1
  item.chomp!

  ss_inst = h[ item ]
  if ! ss_inst
    serr.puts "NOT FOUND: #{ item }"
    redo
  end

  _gem = ss_inst.gems.last  # yikes, many versions, is this last??

  path = _gem.full_gem_path

  stat = ::File.lstat path

  if stat.symlink?
    serr.puts "already symlink, skipping - #{ path }"
    redo
  end

  2 < path.length || sanity

  cmd = [ "rm", "-rf", path ]

  serr.puts "OH MY GOD: #{ cmd * ' ' }"

  if _IS_LIVE
    _ok = ::Kernel.system( * cmd )
    _ok || break
  end

  exists = ::File.join invo.initial_pwd, item
  want = path

  cmd = "ln -s #{ exists } #{ want }"
  serr.puts cmd

  if _IS_LIVE
    _d = ::File.symlink exists, want
    _d.zero? || break
  end

  redo
end while above

serr.puts "(done with #{ count } items.)"
