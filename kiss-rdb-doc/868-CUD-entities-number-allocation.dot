digraph g {

rankdir=LR

node[shape=record]


/*
test file 100 and 650 were the "goal posts". here's the one-off:
ruby -e 'base=100;span=550; (1..5).each{|i| puts base + (1.0 * i / 6 * span)}'
*/



nl050[label="
test file 192: ID's via file lines|
<055>Case055_truly_blank_file_produces_empty_stream|
<065>Case065_sneak_oxford_join_coverage_into_here|
<075>Case075_effectively_empty_file_produces_empty_stream|
<085>Case085_an_ordinary_looking_line|
<095>Case095_not_quite_section_line|
<105>Case105_section_but_no_dots|
<115>Case115_wrong_keyword_for_third_component|
<125>Case125_too_many_components|
<135>Case135_non_validated_ID_traversal_one|
<145>Case145_non_validated_ID_traversal_two
"
]

nl063[label="
test file 329: block stream (\"coarse parse\")|
<157>Case157_simplified_typical|
<171>Case171_effectively_empty_file_of_course_has_head_block|
<186>Case186_truly_empty_file_has_no_head_block|
<200>Case200_error_in_open_table_line|
<215>Case215_error_in_attribute_value_passes_thru_for_now|
<229>Case229_one_no_head|
<243>Case243_two_yes_head
"
]

nl075[label="
test file 375: entity via identifier and file lines|
<253>Case253_simplified_typical_retrieve_in_mid|
<259>Case259_not_found|
<263>Case263_not_found_anywhere|
<266>Case266_at_head|
<272>Case272_at_tail|
<278>Case278_against_empty|
<282>Case282_too_many_adjacent_same_identifiers|
<284>Case284_duplicate_identifiers_can_get_shadowed|
<290>Case290_invalid_toml_gets_thru_coarse_parse_then_parse_fail|
<297>Case297_trick_the_coarse_parse_with_valid_toml|
<303>Case303_array_not_suported_yet|
<309>Case309_inline_tables_not_suported_yet|
<316>test_316_bool_no_comment  # Case316|
<322>test_322_bool_yes_comment  # Case322|
<328>test_328_int_no_comment  # Case328|
<334>test_334_int_yes_comment  # Case334|
<341>test_341_float_no_comment  # Case341|
<347>test_347_float_yes_comment  # Case347|
<353>test_353_datetime_no_comment  # Case353|
<359>test_359_datetime_yes_comment  # Case359|
<366>Case366_literal_string_not_yet_supported|
<372>Case372_multi_line_literal_string_not_yet_supported|
<378>Case378_multi_line_basic_not_yet_supported|
<384>test_384_basic_string_simple  # Case384|
<391>test_391_basic_string_empty  # Case391|
<397>test_397_escape  # Case397
"
]

nl085[label="
test file 650: CUD entities|
<408>Case408_create_against_truly_empty_file|
<425>Case425_create_against_effectively_empty_file_with_comments|
<441>Case441_create_that_appends_entity_to_the_very_end|
<458>Case458_create_that_inserts_at_the_front|
<475>Case475_create_that_inserts_in_between|
<492>Case492_create_that_inserts_in_between_no_props|
<510>Case510_delete_at_head_no_fluff|
<530>Case530_delete_at_head_yes_fluff|
<550>Case550_delete_in_middle|
<570>Case570_delete_at_end|
<590>Case590_delete_leaving_effectively_empty_file|
<613>Case613_update_at_beginning|
<638>Case638_update_beginning_no_props|
<663>Case663_update_in_middle|
<688>Case688_update_at_end
"
]

nl100[label="
test file 680: file rewrite request via collection (test cases 700-799)|
<705>700-725: collection intro, RDUT|
<735>730-739: create initial index file|
<745>740-749: provision new ID pseudo-randomly|
<765>764-766: create entity|
<775>770-779: single-file schema CUD+RT|
<785>780-789: RESERVED typed values via CLI values|
<795>790-799: CLI lol
"]

nodeRight[label="
<100>\n\n\n\n(100) traverse entity ID's in document\n\n\n\n\n|
<200>\n\n\n\n(200) traverse entities in document\n\n\n\n\n|
<300>\n\n\n\n\n\n\n\n\n\n(300) retrieve one entity\n\n\n\n\n\n\n\n\n\n\n\n|
<400>\n\n(400) create\n\n\n|
<500>\n\n(500) delete\n\n\n|
<600>\n\n(600) update\n\n\n|
<700>\n\n\n\n(700) rumspringa\n\n\n\n\n
"
fontsize=22
]

nl050:055->nodeRight:100
nl050:065->nodeRight:100
nl050:075->nodeRight:100
nl050:085->nodeRight:100
nl050:095->nodeRight:100
nl050:105->nodeRight:100
nl050:115->nodeRight:100
nl050:125->nodeRight:100
nl050:135->nodeRight:100
nl050:145->nodeRight:100


nl063:157->nodeRight:200
nl063:171->nodeRight:200
nl063:186->nodeRight:200
nl063:200->nodeRight:200
nl063:215->nodeRight:200
nl063:229->nodeRight:200
nl063:243->nodeRight:200


nl075:253->nodeRight:300
nl075:259->nodeRight:300
nl075:263->nodeRight:300
nl075:266->nodeRight:300
nl075:272->nodeRight:300
nl075:278->nodeRight:300
nl075:282->nodeRight:300
nl075:284->nodeRight:300
nl075:290->nodeRight:300
nl075:297->nodeRight:300
nl075:303->nodeRight:300
nl075:309->nodeRight:300
nl075:316->nodeRight:300
nl075:322->nodeRight:300
nl075:328->nodeRight:300
nl075:334->nodeRight:300
nl075:341->nodeRight:300
nl075:347->nodeRight:300
nl075:353->nodeRight:300
nl075:359->nodeRight:300
nl075:366->nodeRight:300
nl075:372->nodeRight:300
nl075:378->nodeRight:300
nl075:384->nodeRight:300
nl075:391->nodeRight:300
nl075:397->nodeRight:300


nl085:408->nodeRight:400
nl085:425->nodeRight:400
nl085:441->nodeRight:400
nl085:458->nodeRight:400
nl085:475->nodeRight:400
nl085:492->nodeRight:400
nl085:510->nodeRight:500
nl085:530->nodeRight:500
nl085:550->nodeRight:500
nl085:570->nodeRight:500
nl085:590->nodeRight:500
nl085:613->nodeRight:600
nl085:638->nodeRight:600
nl085:663->nodeRight:600
nl085:688->nodeRight:600


nl100:705->nodeRight:700
nl100:735->nodeRight:700
nl100:745->nodeRight:700
nl100:755->nodeRight:700
nl100:765->nodeRight:700
nl100:775->nodeRight:700
nl100:785->nodeRight:700
nl100:795->nodeRight:700


label="

almost universal \"regression-friendly\" test number allocation guide.
"

/* (reference to [#010.6] regression-friendly test ordering) */

}
/*
#born.
*/
